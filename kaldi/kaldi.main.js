var KaldiWeb=function(e){var t={};function r(s){if(t[s])return t[s].exports;var n=t[s]={i:s,l:!1,exports:{}};return e[s].call(n.exports,n,n.exports,r),n.l=!0,n.exports}return r.m=e,r.c=t,r.d=function(e,t,s){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(r.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)r.d(s,n,function(t){return e[t]}.bind(null,n));return s},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="kaldi/",r(r.s=3)}([function(e,t,r){e.exports=function(){return new Worker(r.p+"idbWorker.js")}},function(e,t,r){e.exports=function(){return new Worker(r.p+"asrWorker.js")}},function(e,t,r){e.exports=function(){return new Worker(r.p+"resamplerWorker.js")}},function(e,t,r){"use strict";r.r(t),r.d(t,"KaldiASR",(function(){return m}));var s=r(0),n=r.n(s);class i{constructor(e){this.worker=e,this.worker.onmessage=this.handleMessage}promisify(e,t){return new Promise((r,s)=>{window.addEventListener("fromWorker",t=>{const{command:n,ok:i,value:o}=t.detail;n===e&&(i||s(new Error(`command "${e}" failed: ${o}`)),r(o))}),this.worker.postMessage({command:e,...t})})}handleMessage(e){const t=new CustomEvent("fromWorker",{detail:e.data});dispatchEvent(t)}}class o extends i{constructor(){super(new n.a)}init(e){return this.promisify("init",{idbInfo:e})}get(e){return this.promisify("get",{modelName:e})}add(e,t){return this.promisify("add",{modelName:e,zip:t})}terminate(){this.idbWorker.postMessage({command:"terminate"})}}var a=r(1),l=r.n(a);class d extends i{constructor(){super(new l.a)}init(e,t){return this.promisify("init",{modelName:e,zip:t})}getSampleRate(){return this.promisify("samplerate")}process(e){return this.promisify("process",{pcm:e})}reset(e){return this.promisify("reset",{zippedModel:e})}terminate(){return this.promisify("terminate")}}var c=r(2),h=r.n(c);class p extends i{constructor(e,t,r){super(new h.a),this.streamSource=e,this.onResampled=t;const{context:s}=this.streamSource;this.processor=s.createScriptProcessor(r,1,1),this.worker.onmessage=this.handleMessage.bind(this)}setSampleRate(e){const{sampleRate:t}=this.streamSource.context,r=e/t;return this.promisify("setConversionRatio",{conversionRatio:r})}start(){this.processor.onaudioprocess=e=>{const t=e.inputBuffer.getChannelData(0);this.worker.postMessage({command:"resample",buffer:t})},this.streamSource.connect(this.processor);const{context:e}=this.streamSource;this.processor.connect(e.destination)}stop(){return this.processor.onaudioprocess=()=>{},this.processor.disconnect(),this.promisify("reset")}terminate(){return this.stop(),this.processor=null,this.promisify("terminate")}handleMessage(e){super.handleMessage(e);const{command:t,value:r}=e.data;"resample"===t&&this.onResampled(r)}}function u(e){return new Promise((t,r)=>{fetch(e).then(t=>{if(t.ok)return t.blob();throw new Error(`"${e}": ${t.statusText}`)}).then(e=>function(e){return new Promise((t,r)=>{const s=new FileReader;s.addEventListener("loadend",()=>{t(s.result)}),s.addEventListener("error",r),s.readAsArrayBuffer(e)})}(e)).then(t).catch(r)})}class m{constructor(e,t){this.AudioContext=window.AudioContext||window.webkitAudioContext,this.onResampled=this.onResampled.bind(this),this.onModelChange=this.onModelChange.bind(this),this.startASR=this.startASR.bind(this),this.stopASR=this.stopASR.bind(this),this.updateTranscription=this.updateTranscription.bind(this),this.resamplerBufferSize=4096,this.modelURLPrefix=e,this.modelName=t,this.listening=!0,this.idbInfo={name:"asr_models",version:1,storeInfo:{name:"models",keyPath:"language"}},this.state={prevIsFinal:!1,transcriptions:[""],tmpTranscription:""},this.asrHandler=null,this.idbHandler=null,this.resamplerHandler=null}async askForMicrophone(){return new Promise((e,t)=>{navigator.mediaDevices.getUserMedia({audio:!0,video:!1}).then(t=>{const r=(new this.AudioContext).createMediaStreamSource(t);this.resamplerHandler=new p(r,this.onResampled,this.resamplerBufferSize),e(!0)}).catch(e=>{console.error(e),t(!1)})})}async init(){return new Promise(async(e,t)=>{this.asrHandler=new d,this.idbHandler=new o,await this.idbHandler.init(this.idbInfo).catch(console.error),await this.onModelChange(this.modelName),e()})}async onModelChange(e){this.idbHandler.get(e).catch(()=>(console.log(`Baldi: .catch(): idbHandler did not find model ${e}, downloading...`),this.downloadAndStore(e))).then(({value:t})=>new Promise((r,s)=>{this.asrHandler.terminate().then(()=>{console.log("Baldi: Initializing model"),r(this.asrHandler.init(e,t))}).catch(s)})).then(()=>this.asrHandler.getSampleRate()).then(e=>this.resamplerHandler.setSampleRate(e)).then(()=>(console.log("Baldi: Model is set, starting ASR....."),this.startASR(),!0)).catch(e=>(console.error(e),!1))}onResampled(e){this.listening&&this.asrHandler.process(e).then(this.updateTranscription)}downloadAndStore(e){return new Promise((t,r)=>{console.log("Baldi: Downloading model "+e),u(`${this.modelURLPrefix}/${e}`).then(r=>{this.idbHandler.add(e,r).catch(console.error).finally(()=>t({value:r}))}).catch(r)})}updateTranscription(e){if(null===e)return;const{text:t,isFinal:r}=e;if(this.state.prevIsFinal)this.state.prevIsFinal=r;else{if(r&&""!==t||!r){const{transcriptions:e}=this.state;this.state.transcriptions.push(t),this.state.tmpTranscription="",console.log("Transcription is final: ",r,t);const s=new CustomEvent("onTranscription",{detail:{isFinal:r,transcription:t}});dispatchEvent(s)}this.state.prevIsFinal=r}}startASR(){this.resamplerHandler.start(),console.log("Baldi: ASR Has started");const e=new CustomEvent("onASRStart",{detail:{ready:!0}});dispatchEvent(e)}stopASR(){this.resamplerHandler.stop().then(()=>this.asrHandler.reset()).then(this.updateTranscription).catch(console.log).finally(()=>console.log("Baldi: ASR Has been stopped"))}}}]);